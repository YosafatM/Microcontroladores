;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned char read_adc(unsigned char adc_input)
; 0000 0027 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0028 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	adc_input -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0029 // Delay needed for the stabilization of the ADC input voltage
; 0000 002A delay_us(10);
;PCODE: $00000014 VOL: 0
; 0000 002B // Start the AD conversion
; 0000 002C ADCSRA|=(1<<ADSC);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002D // Wait for the AD conversion to complete
; 0000 002E while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002F ADCSRA|=(1<<ADIF);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0030 return ADCH;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0031 }
;PCODE: $00000022 VOL: 0
;void main(void)
; 0000 0036 {
;PCODE: $00000023 VOL: 0
; 0000 0037 // Declare your local variables here
; 0000 0038 
; 0000 0039 // Input/Output Ports initialization
; 0000 003A // Port A initialization
; 0000 003B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003C DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 003D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003E PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 003F 
; 0000 0040 // Port B initialization
; 0000 0041 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0042 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0043 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0044 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0045 
; 0000 0046 // Port C initialization
; 0000 0047 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0048 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0049 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 004A PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004B 
; 0000 004C // Port D initialization
; 0000 004D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 004E DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004F // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 0050 PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0051 
; 0000 0052 // Timer/Counter 0 initialization
; 0000 0053 // Clock source: System Clock
; 0000 0054 // Clock value: Timer 0 Stopped
; 0000 0055 // Mode: Normal top=0xFF
; 0000 0056 // OC0 output: Disconnected
; 0000 0057 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0058 TCNT0=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0059 OCR0=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005A 
; 0000 005B // Timer/Counter 1 initialization
; 0000 005C // Clock source: System Clock
; 0000 005D // Clock value: Timer1 Stopped
; 0000 005E // Mode: Normal top=0xFFFF
; 0000 005F // OC1A output: Disconnected
; 0000 0060 // OC1B output: Disconnected
; 0000 0061 // Noise Canceler: Off
; 0000 0062 // Input Capture on Falling Edge
; 0000 0063 // Timer1 Overflow Interrupt: Off
; 0000 0064 // Input Capture Interrupt: Off
; 0000 0065 // Compare A Match Interrupt: Off
; 0000 0066 // Compare B Match Interrupt: Off
; 0000 0067 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0068 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0069 TCNT1H=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006A TCNT1L=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006B ICR1H=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006C ICR1L=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006D OCR1AH=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006E OCR1AL=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 006F OCR1BH=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0070 OCR1BL=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0071 
; 0000 0072 // Timer/Counter 2 initialization
; 0000 0073 // Clock source: System Clock
; 0000 0074 // Clock value: Timer2 Stopped
; 0000 0075 // Mode: Normal top=0xFF
; 0000 0076 // OC2 output: Disconnected
; 0000 0077 ASSR=0<<AS2;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0078 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0079 TCNT2=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 007A OCR2=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 007B 
; 0000 007C // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 007D TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 007E 
; 0000 007F // External Interrupt(s) initialization
; 0000 0080 // INT0: Off
; 0000 0081 // INT1: Off
; 0000 0082 // INT2: Off
; 0000 0083 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0084 MCUCSR=(0<<ISC2);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0085 
; 0000 0086 // USART initialization
; 0000 0087 // USART disabled
; 0000 0088 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0089 
; 0000 008A // Analog Comparator initialization
; 0000 008B // Analog Comparator: Off
; 0000 008C // The Analog Comparator's positive input is
; 0000 008D // connected to the AIN0 pin
; 0000 008E // The Analog Comparator's negative input is
; 0000 008F // connected to the AIN1 pin
; 0000 0090 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0091 
; 0000 0092 // ADC initialization
; 0000 0093 // ADC Clock frequency: 500.000 kHz
; 0000 0094 // ADC Voltage Reference: AVCC pin
; 0000 0095 // ADC High Speed Mode: Off
; 0000 0096 // ADC Auto Trigger Source: ADC Stopped
; 0000 0097 // Only the 8 most significant bits of
; 0000 0098 // the AD conversion result are used
; 0000 0099 ADMUX=ADC_VREF_TYPE;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 009A ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 009B SFIOR=(1<<ADHSM) | (0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 009C 
; 0000 009D // SPI initialization
; 0000 009E // SPI disabled
; 0000 009F SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00A0 
; 0000 00A1 // TWI initialization
; 0000 00A2 // TWI disabled
; 0000 00A3 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00A4 
; 0000 00A5 while (1)
;PCODE: $0000006A VOL: 0
; 0000 00A6 {
; 0000 00A7 valor = read_adc(0);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00A8 actual = btn;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 00A9 
; 0000 00AA //Boton de modo
; 0000 00AB if (pasado == 1 && actual == 0) {
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00AC isFahrenheit = ~isFahrenheit;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00AD delay_ms(20);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00AE }
; 0000 00AF 
; 0000 00B0 if (pasado == 0 && actual == 1) {
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B1 delay_ms(20);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00B2 }
; 0000 00B3 
; 0000 00B4 
; 0000 00B5 if (isFahrenheit) {
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00B6 intensidad = 9*(50 * valor / 255)/5 + 32;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00B7 delay_ms(7);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00B8 PORTB = ~mem[intensidad/100];
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00B9 PORTC = 0x01;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00BA 
; 0000 00BB delay_ms(7);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00BC PORTB = ~mem[(intensidad%100 - intensidad%10)/10];
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00BD PORTC = 0x02;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00BE 
; 0000 00BF delay_ms(7);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00C0 PORTB = ~mem[intensidad%10];
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00C1 PORTC = 0x04;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00C2 
; 0000 00C3 } else {
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00C4 intensidad = 50 * valor / 255;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00C5 delay_ms(7);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00C6 PORTB = ~mem[0];
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00C7 PORTC = 0x01;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00C8 
; 0000 00C9 delay_ms(7);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00CA PORTB = ~mem[intensidad/10];
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00CB PORTC = 0x02;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00CC 
; 0000 00CD delay_ms(7);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00CE PORTB = ~mem[intensidad%10];
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00CF PORTC = 0x04;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00D0 }
;PCODE: $000000FD VOL: 0
; 0000 00D1 
; 0000 00D2 pasado = actual;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00D3 }
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00D4 }
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
